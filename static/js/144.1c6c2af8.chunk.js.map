{"version":3,"file":"static/js/144.1c6c2af8.chunk.js","mappings":"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","sources":["components/Filters/Filters.styled.js","components/Filters/Filters.jsx","redux/modal/modalSelectors.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FiltersWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  width: 100%;\n  margin: 0 auto 50px;\n`;\n\nexport const SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 224px;\n`;\n\nexport const SelectLabel = styled.label`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.28571;\n  margin-bottom: 8px;\n  color: ${props => props.theme.colors.filterLabelColor};\n`;\n\nexport const FiltersBtn = styled.button`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.43;\n  border-radius: 12px;\n  padding: 14px 44px;\n  width: 136px;\n  margin: 0 0 0 18px;\n  height: 48px;\n  color: ${props => props.theme.colors.buttonTextColor};\n  background-color: ${props => props.theme.colors.secondAccentColor};\n  transition: background-color 300ms linear;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.accentColor};\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  FiltersBtn,\n  FiltersWrapper,\n  SelectLabel,\n  SelectWrapper,\n} from './Filters.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterWord } from 'redux/cars/carsSlice';\nimport { selectFilterWord } from 'redux/cars/carsSelectors';\nimport Select from 'react-select';\nimport { useSearchParams } from 'react-router-dom';\n\nconst filterOptions = [\n  { value: '', label: 'All brands' },\n  { value: 'Buick', label: 'Buick' },\n  { value: 'Volvo', label: 'Volvo' },\n  { value: 'HUMMER', label: 'HUMMER' },\n  { value: 'Subaru', label: 'Subaru' },\n  { value: 'Mitsubishi', label: 'Mitsubishi' },\n  { value: 'Nissan', label: 'Nissan' },\n  { value: 'Lincoln', label: 'Lincoln' },\n  { value: 'GMC', label: 'GMC' },\n  { value: 'Hyundai', label: 'Hyundai' },\n  { value: 'MINI', label: 'MINI' },\n  { value: 'Bentley', label: 'Bentley' },\n  { value: 'Mercedes', label: 'Mercedes' },\n  { value: 'Aston Martin', label: 'Aston Martin' },\n  { value: 'Pontiac', label: 'Pontiac' },\n  { value: 'Lamborghini', label: 'Lamborghini' },\n  { value: 'Audi', label: 'Audi' },\n  { value: 'BMW', label: 'BMW' },\n  { value: 'Chevrolet', label: 'Chevrolet' },\n  { value: 'Chrysler', label: 'Chrysler' },\n  { value: 'Kia', label: 'Kia' },\n  { value: 'Land', label: 'Land' },\n];\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    backgroundColor: '#f7f7fb',\n    borderRadius: '14px',\n    padding: '6px',\n  }),\n  menu: provided => ({\n    ...provided,\n    backgroundColor: '#fff',\n    borderRadius: '14px',\n    paddingRight: '10px',\n  }),\n  menuList: provided => ({\n    ...provided,\n    '&::-webkit-scrollbar': {\n      width: '8px',\n      paddingRight: '8px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#f3f3f3',\n      borderRadius: '10px',\n      margin: '14px 8px',\n    },\n    '&::-webkit-scrollbar-track': {\n      backgroundColor: 'transparent',\n      borderRadius: '10px',\n      margin: '14px 8px',\n    },\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: state.isFocused ? '#121417' : 'rgba(18, 20, 23, 0.2)',\n    backgroundColor: 'transparent',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: 1.25,\n  }),\n  indicatorSeparator: () => ({\n    display: 'none',\n  }),\n  dropdownIndicator: (provided, state) => ({\n    ...provided,\n    transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n  }),\n  indicatorsContainer: provided => ({\n    ...provided,\n    cursor: 'pointer',\n  }),\n};\n\nexport const Filters = () => {\n  const filterWord = useSelector(selectFilterWord);\n  const [selectedOption, setSelectedOption] = useState(filterWord);\n  const dispatch = useDispatch();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const make = searchParams.get('make');\n    if (make) {\n      setSelectedOption(filterOptions.find(option => option.value === make));\n      dispatch(setFilterWord(make));\n    }\n  }, [searchParams, dispatch]);\n\n  const onChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n\n  const onSearchClick = () => {\n    if (selectedOption) {\n      setSearchParams({ make: selectedOption.value });\n      dispatch(setFilterWord(selectedOption.value));\n    } else {\n      setSearchParams({ make: '' });\n      dispatch(setFilterWord(''));\n    }\n  };\n\n  return (\n    <FiltersWrapper>\n      <SelectWrapper>\n        <SelectLabel>Car brand</SelectLabel>\n        <Select\n          placeholder=\"Choose a brand\"\n          name=\"carMakeFilter\"\n          id=\"make_filter\"\n          styles={customStyles}\n          options={filterOptions}\n          value={selectedOption}\n          onChange={onChange}\n        ></Select>\n      </SelectWrapper>\n      <FiltersBtn onClick={onSearchClick}>Search</FiltersBtn>\n    </FiltersWrapper>\n  );\n};\n","export const selectIsOpenModal = state => state.modal.isOpenModal;\nexport const selectModalData = state => state.modal.modalData;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { CatalogList, CatalogWrapper, LoadMoreBtn } from './Catalog.styled';\nimport { Filters } from 'components/Filters/Filters';\nimport { CarCard } from 'components/CarCard/CarCard';\nimport { CarModal } from 'components/CarModal/CarModal';\nimport { fetchCars, fetchMoreCars } from 'redux/cars/carsSlice';\nimport { openModal } from 'redux/modal/modalSlice';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer } from 'react-notifications';\nimport {\n  selectCars,\n  selectCurrentPage,\n  selectFilterWord,\n} from 'redux/cars/carsSelectors';\nimport { selectIsOpenModal, selectModalData } from 'redux/modal/modalSelectors';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n  const currentPage = useSelector(selectCurrentPage);\n  const isOpenModal = useSelector(selectIsOpenModal);\n  const modalData = useSelector(selectModalData);\n  const filterWord = useSelector(selectFilterWord);\n\n  useEffect(() => {\n    dispatch(fetchCars());\n  }, [dispatch]);\n\n  const openCarModal = car => {\n    dispatch(openModal(car));\n  };\n\n  const loadMoreCars = () => {\n    dispatch(fetchMoreCars(currentPage + 1));\n  };\n\n  const filteredCarCards = cars.filter(car =>\n    car.make.toLowerCase().includes(filterWord.toLowerCase())\n  );\n\n  return (\n    <>\n      <CatalogWrapper>\n        <Filters />\n        <CatalogList>\n          {filteredCarCards.map(car => (\n            <CarCard key={car.id} openModal={openCarModal} car={car} />\n          ))}\n        </CatalogList>\n\n        {filteredCarCards.length % 12 !== 0 ||\n        !cars.length ||\n        cars.length % 12 !== 0 ? null : (\n          <LoadMoreBtn type=\"button\" onClick={loadMoreCars}>\n            Load more\n          </LoadMoreBtn>\n        )}\n\n        {isOpenModal && <CarModal modalData={modalData} />}\n        <NotificationContainer />\n      </CatalogWrapper>\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["FiltersWrapper","styled","_templateObject","_taggedTemplateLiteral","SelectWrapper","_templateObject2","SelectLabel","_templateObject3","props","theme","colors","filterLabelColor","FiltersBtn","_templateObject4","buttonTextColor","secondAccentColor","accentColor","filterOptions","value","label","customStyles","control","provided","_objectSpread","backgroundColor","borderRadius","padding","menu","paddingRight","menuList","width","margin","option","state","color","isFocused","fontWeight","fontSize","lineHeight","indicatorSeparator","display","dropdownIndicator","transform","selectProps","menuIsOpen","indicatorsContainer","cursor","Filters","filterWord","useSelector","selectFilterWord","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","dispatch","useDispatch","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","make","get","find","setFilterWord","_jsxs","children","_jsx","Select","placeholder","name","id","styles","options","onChange","onClick","selectIsOpenModal","modal","isOpenModal","selectModalData","modalData","cars","selectCars","currentPage","selectCurrentPage","fetchCars","openCarModal","car","openModal","filteredCarCards","filter","toLowerCase","includes","_Fragment","CatalogWrapper","CatalogList","map","CarCard","length","LoadMoreBtn","type","fetchMoreCars","CarModal","NotificationContainer"],"sourceRoot":""}